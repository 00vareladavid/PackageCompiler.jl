# Generate:
pushd base
../usr/bin/julia --compile=all -J ../usr/lib/julia/inference.ji --output-bc inference.bc coreimg.jl
../usr/bin/julia --compile=all -J ../usr/lib/julia/inference.ji --output-bc sys.bc sysimg.jl
popd

../usr/bin/julia --startup-file=no --compile=all --precompiled=no -J ../usr/lib/julia/sys.dylib --output-bc sys-plus.bc program.jl

# Direct test via llvm:
./usr/bin/llc -filetype=obj base/sys-plus.bc -o=usr/lib/julia/sys-plus.o
cp usr/lib/julia/sys-plus.o usr/lib/julia/sys-plus-debug.o
make ~+/usr/lib/julia/sys-plus.dylib
make ~+/usr/lib/julia/sys-plus-debug.dylib

# Indirect test via the CBackend:
../julia/usr/bin/llvm-cbe sys-plus.bc -o=sys-plus.cbe.c

WARN='-std=c89 -pedantic -Wall -Wextra -Wno-unused-variable -Wno-unused-function -Wno-unused-parameter -Wno-sign-compare -Wno-unused-but-set-variable -Wno-long-long'
clang -c -fPIC sys-plus.cbe.c ${WARN} -o sys-plus.o -I../julia/src -I../julia/src/support -pipe # -ggdb3 -O3 -integrated-as
clang -shared -dynamic sys-plus.o -L ../julia/usr/lib -ljulia ${WARN} -o sys-plus.dylib

cl sys-plus.cbe.c /I..\julia\src /I..\julia\src\support /D__unaligned= /c /Wall /wd4054 /wd4245 /wd4100 /wd4055 /wd4127 /wd4645 /wd4646 /wd4389 /wd4242 /wd4146 /wd4244 /wd4820 /wd4702

# Run:
./usr/bin/julia -J usr/lib/julia/sys-plus.dylib --compile=no

# Create custom embedded app
clang ${WARN} program.c -o julia_hello -I../julia/src -I../julia/src/support -I../julia/usr/include -L../julia/usr/lib sys-plus.dylib -ljulia -Wl,-rpath,../julia/usr/lib -ggdb3
./julia_hello

# Known compiler warnings:
#
../julia/src/APInt-C.h:1:1: error: C++ style comments are not allowed in ISO C90
Solution: convert Julia public headers to use C-style comments
Alternative: ignore this error

sys-plus.cbe.c:89252:58: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
Solution: convert jl_sysimg_gvars from i8*[] to void()*[]
Alternative: ignore this error

TODO:
handle stdcall, etc. for function call sites, prototypes

use openlibm header instead of math.h (because msvc)
